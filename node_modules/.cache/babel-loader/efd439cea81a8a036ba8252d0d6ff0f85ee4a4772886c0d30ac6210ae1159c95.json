{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useParams,Link}from'react-router-dom';import axios from'axios';import'./MemorialView.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MemorialView=()=>{const{id}=useParams();const[memorial,setMemorial]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState('');const[showPasswordForm,setShowPasswordForm]=useState(false);const[password,setPassword]=useState('');const[passwordError,setPasswordError]=useState('');useEffect(()=>{fetchMemorial();},[id]);const fetchMemorial=async()=>{try{const response=await axios.get(`/api/memorials/${id}`);setMemorial(response.data.memorial);// Check if memorial is private and we need password\nif(!response.data.memorial.is_public&&!password){setShowPasswordForm(true);}}catch(err){var _err$response,_err$response$data;setError(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.error)||'Failed to load memorial');}finally{setLoading(false);}};const handlePasswordSubmit=async e=>{e.preventDefault();setPasswordError('');try{// Test password by trying to fetch memorial again\nconst response=await axios.get(`/api/memorials/${id}`,{headers:{'X-Password':password}});setMemorial(response.data.memorial);setShowPasswordForm(false);}catch(err){setPasswordError('Invalid password');}};const calculateMosaicOpacity=()=>{if(!memorial||!memorial.memories)return 0;const totalMemories=memorial.memories.length;// Start revealing at 5 memories, fully revealed at 50 memories\nconst minMemories=5;const maxMemories=50;const opacity=Math.min(1,Math.max(0,(totalMemories-minMemories)/(maxMemories-minMemories)));return opacity;};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"memorial-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Loading memorial...\"})});}if(error){return/*#__PURE__*/_jsx(\"div\",{className:\"memorial-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error})});}if(!memorial){return/*#__PURE__*/_jsx(\"div\",{className:\"memorial-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:\"Memorial not found\"})});}if(showPasswordForm){return/*#__PURE__*/_jsx(\"div\",{className:\"memorial-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"password-form\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Private Memorial\"}),/*#__PURE__*/_jsx(\"p\",{children:\"This memorial is private. Please enter the password to view it.\"}),passwordError&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:passwordError}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handlePasswordSubmit,children:[/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:password,onChange:e=>setPassword(e.target.value),placeholder:\"Enter password\",required:true})}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary\",children:\"View Memorial\"})]})]})});}const mosaicOpacity=calculateMosaicOpacity();return/*#__PURE__*/_jsxs(\"div\",{className:\"memorial-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"memorial-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:memorial.name}),memorial.description&&/*#__PURE__*/_jsx(\"p\",{className:\"memorial-description\",children:memorial.description}),/*#__PURE__*/_jsxs(\"p\",{className:\"memorial-meta\",children:[\"Created by \",memorial.users.name,\" \\u2022 \",memorial.memories.length,\" memories shared\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mosaic-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mosaic-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"base-image\",children:/*#__PURE__*/_jsx(\"img\",{src:memorial.photo_url,alt:memorial.name})}),/*#__PURE__*/_jsx(\"div\",{className:\"mosaic-overlay\",style:{opacity:mosaicOpacity},children:/*#__PURE__*/_jsx(\"div\",{className:\"mosaic-grid\",children:memorial.memories.map((memory,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"mosaic-tile\",style:{backgroundColor:memory.dominant_colors[0]?`rgb(${memory.dominant_colors[0].r}, ${memory.dominant_colors[0].g}, ${memory.dominant_colors[0].b})`:'#ccc'},title:`${memory.visitor_name}: ${memory.message}`,children:/*#__PURE__*/_jsx(\"img\",{src:memory.photo_url,alt:memory.visitor_name})},memory.id))})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mosaic-info\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Memory Mosaic\"}),/*#__PURE__*/_jsx(\"p\",{children:memorial.memories.length===0?\"Be the first to share a memory and start revealing the beautiful image.\":`As more memories are shared, the image of ${memorial.name} becomes more visible.`}),/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-fill\",style:{width:`${mosaicOpacity*100}%`}})}),/*#__PURE__*/_jsxs(\"p\",{className:\"progress-text\",children:[Math.round(mosaicOpacity*100),\"% revealed\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"memories-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"memories-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Shared Memories\"}),/*#__PURE__*/_jsx(Link,{to:`/memorial/${id}/add-memory`,className:\"add-memory-btn\",children:\"Add Your Memory\"})]}),memorial.memories.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"empty-memories\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"empty-icon\",children:\"\\uD83D\\uDC9D\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"No memories shared yet\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Be the first to share a memory and photo\"}),/*#__PURE__*/_jsx(Link,{to:`/memorial/${id}/add-memory`,className:\"btn btn-primary\",children:\"Share First Memory\"})]}):/*#__PURE__*/_jsx(\"div\",{className:\"memories-grid\",children:memorial.memories.map(memory=>/*#__PURE__*/_jsxs(\"div\",{className:\"memory-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"memory-image\",children:/*#__PURE__*/_jsx(\"img\",{src:memory.photo_url,alt:memory.visitor_name})}),/*#__PURE__*/_jsxs(\"div\",{className:\"memory-content\",children:[/*#__PURE__*/_jsx(\"h4\",{children:memory.visitor_name}),/*#__PURE__*/_jsx(\"p\",{children:memory.message}),/*#__PURE__*/_jsx(\"span\",{className:\"memory-date\",children:new Date(memory.created_at).toLocaleDateString()})]})]},memory.id))})]})]});};export default MemorialView;","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","axios","jsx","_jsx","jsxs","_jsxs","MemorialView","id","memorial","setMemorial","loading","setLoading","error","setError","showPasswordForm","setShowPasswordForm","password","setPassword","passwordError","setPasswordError","fetchMemorial","response","get","data","is_public","err","_err$response","_err$response$data","handlePasswordSubmit","e","preventDefault","headers","calculateMosaicOpacity","memories","totalMemories","length","minMemories","maxMemories","opacity","Math","min","max","className","children","onSubmit","type","value","onChange","target","placeholder","required","mosaicOpacity","name","description","users","src","photo_url","alt","style","map","memory","index","backgroundColor","dominant_colors","r","g","b","title","visitor_name","message","width","round","to","Date","created_at","toLocaleDateString"],"sources":["/workspace/Mozaiek/src/pages/MemorialView.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport './MemorialView.css';\n\ninterface Memory {\n  id: string;\n  visitor_name: string;\n  message: string;\n  photo_url: string;\n  created_at: string;\n  dominant_colors: Array<{ r: number; g: number; b: number }>;\n}\n\ninterface Memorial {\n  id: string;\n  name: string;\n  description: string;\n  photo_url: string;\n  is_public: boolean;\n  created_at: string;\n  users: { name: string };\n  memories: Memory[];\n}\n\nconst MemorialView: React.FC = () => {\n  const { id } = useParams<{ id: string }>();\n  const [memorial, setMemorial] = useState<Memorial | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [showPasswordForm, setShowPasswordForm] = useState(false);\n  const [password, setPassword] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n\n  useEffect(() => {\n    fetchMemorial();\n  }, [id]);\n\n  const fetchMemorial = async () => {\n    try {\n      const response = await axios.get(`/api/memorials/${id}`);\n      setMemorial(response.data.memorial);\n      \n      // Check if memorial is private and we need password\n      if (!response.data.memorial.is_public && !password) {\n        setShowPasswordForm(true);\n      }\n    } catch (err: any) {\n      setError(err.response?.data?.error || 'Failed to load memorial');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handlePasswordSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setPasswordError('');\n\n    try {\n      // Test password by trying to fetch memorial again\n      const response = await axios.get(`/api/memorials/${id}`, {\n        headers: {\n          'X-Password': password\n        }\n      });\n      setMemorial(response.data.memorial);\n      setShowPasswordForm(false);\n    } catch (err: any) {\n      setPasswordError('Invalid password');\n    }\n  };\n\n  const calculateMosaicOpacity = () => {\n    if (!memorial || !memorial.memories) return 0;\n    const totalMemories = memorial.memories.length;\n    // Start revealing at 5 memories, fully revealed at 50 memories\n    const minMemories = 5;\n    const maxMemories = 50;\n    const opacity = Math.min(1, Math.max(0, (totalMemories - minMemories) / (maxMemories - minMemories)));\n    return opacity;\n  };\n\n  if (loading) {\n    return (\n      <div className=\"memorial-container\">\n        <div className=\"loading\">Loading memorial...</div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"memorial-container\">\n        <div className=\"error-message\">{error}</div>\n      </div>\n    );\n  }\n\n  if (!memorial) {\n    return (\n      <div className=\"memorial-container\">\n        <div className=\"error-message\">Memorial not found</div>\n      </div>\n    );\n  }\n\n  if (showPasswordForm) {\n    return (\n      <div className=\"memorial-container\">\n        <div className=\"password-form\">\n          <h2>Private Memorial</h2>\n          <p>This memorial is private. Please enter the password to view it.</p>\n          \n          {passwordError && <div className=\"error-message\">{passwordError}</div>}\n          \n          <form onSubmit={handlePasswordSubmit}>\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                placeholder=\"Enter password\"\n                required\n              />\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">\n              View Memorial\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n\n  const mosaicOpacity = calculateMosaicOpacity();\n\n  return (\n    <div className=\"memorial-container\">\n      <div className=\"memorial-header\">\n        <h1>{memorial.name}</h1>\n        {memorial.description && <p className=\"memorial-description\">{memorial.description}</p>}\n        <p className=\"memorial-meta\">\n          Created by {memorial.users.name} • {memorial.memories.length} memories shared\n        </p>\n      </div>\n\n      <div className=\"mosaic-section\">\n        <div className=\"mosaic-container\">\n          <div className=\"base-image\">\n            <img src={memorial.photo_url} alt={memorial.name} />\n          </div>\n          \n          <div \n            className=\"mosaic-overlay\"\n            style={{ opacity: mosaicOpacity }}\n          >\n            <div className=\"mosaic-grid\">\n              {memorial.memories.map((memory, index) => (\n                <div \n                  key={memory.id}\n                  className=\"mosaic-tile\"\n                  style={{\n                    backgroundColor: memory.dominant_colors[0] \n                      ? `rgb(${memory.dominant_colors[0].r}, ${memory.dominant_colors[0].g}, ${memory.dominant_colors[0].b})`\n                      : '#ccc'\n                  }}\n                  title={`${memory.visitor_name}: ${memory.message}`}\n                >\n                  <img src={memory.photo_url} alt={memory.visitor_name} />\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"mosaic-info\">\n          <h3>Memory Mosaic</h3>\n          <p>\n            {memorial.memories.length === 0 \n              ? \"Be the first to share a memory and start revealing the beautiful image.\"\n              : `As more memories are shared, the image of ${memorial.name} becomes more visible.`\n            }\n          </p>\n          <div className=\"progress-bar\">\n            <div \n              className=\"progress-fill\"\n              style={{ width: `${mosaicOpacity * 100}%` }}\n            ></div>\n          </div>\n          <p className=\"progress-text\">\n            {Math.round(mosaicOpacity * 100)}% revealed\n          </p>\n        </div>\n      </div>\n\n      <div className=\"memories-section\">\n        <div className=\"memories-header\">\n          <h2>Shared Memories</h2>\n          <Link to={`/memorial/${id}/add-memory`} className=\"add-memory-btn\">\n            Add Your Memory\n          </Link>\n        </div>\n\n        {memorial.memories.length === 0 ? (\n          <div className=\"empty-memories\">\n            <div className=\"empty-icon\">💝</div>\n            <h3>No memories shared yet</h3>\n            <p>Be the first to share a memory and photo</p>\n            <Link to={`/memorial/${id}/add-memory`} className=\"btn btn-primary\">\n              Share First Memory\n            </Link>\n          </div>\n        ) : (\n          <div className=\"memories-grid\">\n            {memorial.memories.map((memory) => (\n              <div key={memory.id} className=\"memory-card\">\n                <div className=\"memory-image\">\n                  <img src={memory.photo_url} alt={memory.visitor_name} />\n                </div>\n                <div className=\"memory-content\">\n                  <h4>{memory.visitor_name}</h4>\n                  <p>{memory.message}</p>\n                  <span className=\"memory-date\">\n                    {new Date(memory.created_at).toLocaleDateString()}\n                  </span>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MemorialView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}